JSON
	 4. Создать внешний репозиторий c названием JSON.
	 Create a new repository JSON
	

	 5. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/Nataliya13n/JSON-.git
	

	 6. Внутри локального JSON создать файл “new.json”.
	cd JSON; touch new.json
	

	 7. Добавить файл под гит.
	 git add new.json
	

	 8. Закоммитить файл.
	git commit -m "add new file json"
	

	 9. Отправить файл на внешний GitHub репозиторий.
	git push
	

	 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	 cat>>new.json
	    {
	    "Name": "Nataliya Truneuskaya",
	    "Age": 27,
	    "PETS": 0,
	    "Salary": 1000
            }
	

	 11. Отправить изменения на внешний репозиторий.
	git add new.json
	git commit -m "add changes"
	git push
	

	 12. Создать файл preferences.json
	touch preferences.json

	 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	cat>>preferences.json
	{
        "favorite_movie": "Unsleeping in Seatle",
        "favorite_series": "Friends",
        "favorite_food": "Chicken",
        "favorite_season": "Winter",
        "favorite_country": "Italy"
        }
	$ cat>>preferences.json



	 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	 cat>>skills.json
	{
"My new skills"
"basic knowledge of terminal"
"basic knowledge of Github"
}
	cat>>skills.json



	 15. Отправить сразу 2 файла на внешний репозиторий.
	git add {preferences.json,skills.json}
	git commit -m "add new my file"
	git push
	

	

	 16. На веб интерфейсе создать файл bug_report.json.
	add file>Create new file
	

	 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
	

	 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	{
	"Id": 1,
	"Summary": "Open button do not display",
	"Priority": "Middle",
	"Severity": "High",
	}
	

	 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
	

	 20. Синхронизировать внешний и локальный репозиторий JSON
	git pull

TXT
	 1. Создать внешний репозиторий c названием TXT.
	 Create a new repository TXT
	

	 2. Клонировать репозиторий TXT на локальный компьютер.
	git clone https://github.com/Nataliya13n/TXT.git
	

	 3. Внутри локального TXT создать файл “new.txt”.
	cd TXT; touch new.txt
	

	 4. Добавить файл под гит.
	 git add new.txt
	

	 5. Закоммитить файл.
	git commit -m "add new file txt"
	

	 6. Отправить файл на внешний GitHub репозиторий.
	git push
	

	 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
         Vim new.txt
         Name: Nataliya Truneuskaya
	Age: 27
	Pets: 0
	Salary:1000
	
	

	 8. Отправить изменения на внешний репозиторий.
	git add new.txt
	git commit -m "add changes"
	git push
	

	 9. Создать файл preferences.txt
	touch preferences.txt

	 10. В файл preferences.txt добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	
	Vim preferences.txt
        Любимый фильм: Неспящие в Сиэтле
        Любимый сериал:Друзья
        Любимая еда: курица
        Любимое время года: зима
        Страна: Италия

	
	 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате txt
         Touch skills.txt
         vim
         Знания терминала, 
	 знания гитхаб

         12. Сделать коммит в одну строку.
         git add .|git commit -m "add file txt"

	 13. Отправить сразу 2 файла на внешний репозиторий.
         Git push
	

	 14. На веб интерфейсе создать файл bug_report.txt.
	add file>Create new file
	

	 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
	

	 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
	
	"Описание": не отображается кнопка Открыть
	"Приоритет": средний
	"Статус": открытый"
	"Серьезность": средняя
	
	 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
	

	 18. Синхронизировать внешний и локальный репозиторий TXT
	git pull

XML
	 21. Создать внешний репозиторий c названием XML.
	Create a new repository XML
	

	 22. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/Nataliya13n/XML.git
	

	 23. Внутри локального XML создать файл “new.xml”.
	touch new.xml
	

	 24. Добавить файл под гит.
	git add new.xml
	

	 25. Закоммитить файл.
	git commit -m "add file xml"
	

	 26. Отправить файл на внешний GitHub репозиторий.
	git push
	

	 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	cat>>new.xml
	<?xml version="1.0"?>
	<CAT>
	  <NAME>Nataliya</NAME>
	  <NAME>Truneuskaya</NAME>
	  <AGE>27</AGE>
	  <PETS>zero</PETS>
	  <Salary>1000</Salary>
	</CAT>
	

	 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -m "add new info"
	git push
	

	 29. Создать файл preferences.xml
	touch preferences.xml
	

	 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	cat>>preferences.xml
	<?xml version="1.0"?>
	<CAT>
	  <favorit_movie>Unsleeping in Seatle</favorit_movie>
	  <favorit_series>Friends</favorit_series>
	  <favorit_food>chicken</favorit_food>
	  <favorit_season>Winter</favorit_season>
	  <favorit_country>Italy</favorit_country>
	</CAT>
	

	 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	touch skills.xml
	cat>>skills.xml
<?xml version="1.0"?>
<CAT>
<skills>basic knowledge of Git</skills>
<second skill>basic knowledge of Terminal<second skill>
</CAT>


	 32. Сделать коммит в одну строку.
	git add .|git commit -m "add 2 new file xml"
	

	 33. Отправить сразу 2 файла на внешний репозиторий.
	 git push
	

	 34. На веб интерфейсе создать файл bug_report.xml.
	Create new file
	

	 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
	

	 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	

	<?xml version="1.0"?>
	<CAT>
	  <Summary>Open button do not display</Summary>
	  <Id>1</Id>
	 </CAT>
	

	 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
	

	 38. Синхронизировать внешний и локальный репозиторий XML
	git pull

